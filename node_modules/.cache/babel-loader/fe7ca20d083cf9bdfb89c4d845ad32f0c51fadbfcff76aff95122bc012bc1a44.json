{"ast":null,"code":"var _jsxFileName = \"/Users/peternigh/Desktop/keto-meal-tracker/src/SupplementPlanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supplementPlan = [{\n  time: \"Morning (Fasted)\",\n  supplements: [{\n    name: \"Coffee OR Yerba Mate + Coconut Oil\",\n    dose: \"1 cup + 1 tbsp oil\",\n    notes: \"Fasted OK, MCTs boost ketones & prevent jitters\"\n  }, {\n    name: \"L-Tyrosine\",\n    dose: \"500-1000 mg\",\n    notes: \"Fasted OK, Dopamine precursor, enhances focus\"\n  }, {\n    name: \"Rhodiola Rosea\",\n    dose: \"200-300 mg\",\n    notes: \"Fasted OK, Adaptogen, stress control\"\n  }, {\n    name: \"N-Acetylcysteine (NAC)\",\n    dose: \"600 mg\",\n    notes: \"Fasted OK, Glutamate detox, reduces cravings\"\n  }, {\n    name: \"Magnesium (Glycinate or Malate)\",\n    dose: \"200 mg\",\n    notes: \"Fasted OK, Supports neurotransmitters, reduces cravings\"\n  }, {\n    name: \"Vitamin B6 & B12\",\n    dose: \"B6 (25 mg), B12 (1000 mcg)\",\n    notes: \"Fasted OK, Boosts dopamine synthesis\"\n  }, {\n    name: \"Boron\",\n    dose: \"6-10 mg\",\n    notes: \"Fasted OK, Supports testosterone, bone health, reduces inflammation\"\n  }, {\n    name: \"Nootropic Stack Capsule\",\n    dose: \"1 Capsule (400mg)\",\n    notes: \"Fasted OK, Contains Adrafinil, Phenylpiracetam, Citicoline, Noopept\"\n  }, {\n    name: \"Copper\",\n    dose: \"1-2 mg\",\n    notes: \"Fasted OK, Essential for zinc balance, energy production, and brain function\"\n  }, {\n    name: \"Natto-Serra (Nattokinase + Serrapeptase)\",\n    dose: \"1-2 Capsules\",\n    notes: \"Fasted OK, Supports circulation, fibrin breakdown, and inflammation control\"\n  }]\n}, {\n  time: \"First Meal (~11 AM - 1 PM, Breaking Fast)\",\n  supplements: [{\n    name: \"Food-Based Tyrosine (Eggs + Fresh Fish OR Beef)\",\n    dose: \"-\",\n    notes: \"With Food, Supports dopamine naturally\"\n  }, {\n    name: \"Probiotic (Sauerkraut or Supplement)\",\n    dose: \"-\",\n    notes: \"With Food, Gut health, digestion\"\n  }, {\n    name: \"Zinc\",\n    dose: \"15-30 mg\",\n    notes: \"With Food, Dopamine & immune support\"\n  }, {\n    name: \"Boron\",\n    dose: \"6-10 mg\",\n    notes: \"With Food, Enhances absorption, supports testosterone\"\n  }, {\n    name: \"Copper\",\n    dose: \"1-2 mg\",\n    notes: \"With Food, Take with zinc to maintain mineral balance\"\n  }]\n}, {\n  time: \"Afternoon (~3-4 PM, Prevent Dopamine Crash)\",\n  supplements: [{\n    name: \"Methylene Blue\",\n    dose: \"0.5-1 mg/kg\",\n    notes: \"Fasted OK, Mitochondrial support, cognitive clarity\"\n  }, {\n    name: \"Creatine Monohydrate (Lifting Days Only)\",\n    dose: \"5g\",\n    notes: \"With Food, Supports ATP & cognitive function\"\n  }, {\n    name: \"Nootropic Stack Capsule (Second Dose, If Needed)\",\n    dose: \"1 Capsule (400mg)\",\n    notes: \"Fasted OK, Must be taken 8 hours apart from first dose\"\n  }]\n}, {\n  time: \"Evening (~7-8 PM, Recovery & Sleep Optimization)\",\n  supplements: [{\n    name: \"Beef Liver OR Lightly Cooked Fish (Tuna, Mahi, Snapper)\",\n    dose: \"-\",\n    notes: \"With Food, High in B vitamins + Zinc for dopamine recovery\"\n  }, {\n    name: \"Avocado\",\n    dose: \"-\",\n    notes: \"With Food, Healthy fats for brain function\"\n  }, {\n    name: \"Glycine\",\n    dose: \"1000 mg\",\n    notes: \"With Food, Optional for Sleep, Calming neurotransmitter\"\n  }, {\n    name: \"Taurine\",\n    dose: \"500 mg\",\n    notes: \"With Food, GABA support, reduces stress\"\n  }, {\n    name: \"Magnesium\",\n    dose: \"200 mg\",\n    notes: \"With Food, Enhances sleep & muscle relaxation\"\n  }]\n}, {\n  time: \"Nighttime (~9-10 PM, Sleep Optimization)\",\n  supplements: [{\n    name: \"Chamomile OR Lemon Balm Tea\",\n    dose: \"-\",\n    notes: \"Fasted OK, Prepares body for sleep\"\n  }, {\n    name: \"Inositol\",\n    dose: \"500-1000 mg\",\n    notes: \"Fasted OK, Reduces overactive thoughts & anxiety\"\n  }, {\n    name: \"Glycine + Taurine + Magnesium (if not taken earlier)\",\n    dose: \"-\",\n    notes: \"Fasted OK, Supports deep sleep\"\n  }]\n}];\nconst SupplementPlanner = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [supplementData, setSupplementData] = useState(() => {\n    const saved = localStorage.getItem('supplementData');\n    return saved ? JSON.parse(saved) : {};\n  });\n  useEffect(() => {\n    localStorage.setItem('supplementData', JSON.stringify(supplementData));\n  }, [supplementData]);\n  const getDateKey = date => date.toISOString().split('T')[0];\n  const toggleSupplementCompletion = (timeIndex, supplementIndex) => {\n    const dateKey = getDateKey(currentDate);\n    const supplementKey = `${dateKey}-${timeIndex}-${supplementIndex}`;\n    setSupplementData(prev => ({\n      ...prev,\n      [supplementKey]: !prev[supplementKey]\n    }));\n  };\n  const isSupplementCompleted = (timeIndex, supplementIndex) => {\n    const dateKey = getDateKey(currentDate);\n    const supplementKey = `${dateKey}-${timeIndex}-${supplementIndex}`;\n    return supplementData[supplementKey] || false;\n  };\n  const calculateCompletion = () => {\n    const dateKey = getDateKey(currentDate);\n    let completed = 0;\n    let total = 0;\n    supplementPlan.forEach((timeSlot, timeIndex) => {\n      timeSlot.supplements.forEach((_, supplementIndex) => {\n        const supplementKey = `${dateKey}-${timeIndex}-${supplementIndex}`;\n        if (supplementData[supplementKey]) completed++;\n        total++;\n      });\n    });\n    return {\n      completed,\n      total,\n      percentage: Math.round(completed / total * 100)\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"supplement-planner\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Supplement Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() - 1);\n            return newDate;\n          }),\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentDate.toLocaleDateString('en-US', {\n            weekday: 'short',\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() + 1);\n            return newDate;\n          }),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Today's Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Supplements Taken\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [calculateCompletion().completed, \"/\", calculateCompletion().total, \" (\", calculateCompletion().percentage, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${calculateCompletion().percentage}%`,\n                  backgroundColor: calculateCompletion().percentage > 66 ? '#22c55e' : calculateCompletion().percentage > 33 ? '#f59e0b' : '#ef4444'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"supplement-list\",\n      children: supplementPlan.map((timeSlot, timeIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"supplement-time-slot\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"time-slot-header\",\n          children: timeSlot.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"supplements\",\n          children: timeSlot.supplements.map((supplement, supplementIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `supplement-item ${isSupplementCompleted(timeIndex, supplementIndex) ? 'completed' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"supplement-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"supplement-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"supplement-name\",\n                  children: supplement.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: \"supplement-checkbox\",\n                  checked: isSupplementCompleted(timeIndex, supplementIndex),\n                  onChange: () => toggleSupplementCompletion(timeIndex, supplementIndex)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"supplement-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"supplement-dose\",\n                  children: [\"Dose: \", supplement.dose]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"supplement-notes\",\n                  children: supplement.notes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)\n          }, supplementIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, timeIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(SupplementPlanner, \"+Q3ZGkiOQQg7bCOp/TJ1nMazPTg=\");\n_c = SupplementPlanner;\nexport default SupplementPlanner;\nvar _c;\n$RefreshReg$(_c, \"SupplementPlanner\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","supplementPlan","time","supplements","name","dose","notes","SupplementPlanner","_s","currentDate","setCurrentDate","Date","supplementData","setSupplementData","saved","localStorage","getItem","JSON","parse","setItem","stringify","getDateKey","date","toISOString","split","toggleSupplementCompletion","timeIndex","supplementIndex","dateKey","supplementKey","prev","isSupplementCompleted","calculateCompletion","completed","total","forEach","timeSlot","_","percentage","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","newDate","setDate","getDate","toLocaleDateString","weekday","month","day","year","style","width","backgroundColor","map","supplement","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/peternigh/Desktop/keto-meal-tracker/src/SupplementPlanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst supplementPlan = [\n    {\n        time: \"Morning (Fasted)\",\n        supplements: [\n            { name: \"Coffee OR Yerba Mate + Coconut Oil\", dose: \"1 cup + 1 tbsp oil\", notes: \"Fasted OK, MCTs boost ketones & prevent jitters\" },\n            { name: \"L-Tyrosine\", dose: \"500-1000 mg\", notes: \"Fasted OK, Dopamine precursor, enhances focus\" },\n            { name: \"Rhodiola Rosea\", dose: \"200-300 mg\", notes: \"Fasted OK, Adaptogen, stress control\" },\n            { name: \"N-Acetylcysteine (NAC)\", dose: \"600 mg\", notes: \"Fasted OK, Glutamate detox, reduces cravings\" },\n            { name: \"Magnesium (Glycinate or Malate)\", dose: \"200 mg\", notes: \"Fasted OK, Supports neurotransmitters, reduces cravings\" },\n            { name: \"Vitamin B6 & B12\", dose: \"B6 (25 mg), B12 (1000 mcg)\", notes: \"Fasted OK, Boosts dopamine synthesis\" },\n            { name: \"Boron\", dose: \"6-10 mg\", notes: \"Fasted OK, Supports testosterone, bone health, reduces inflammation\" },\n            { name: \"Nootropic Stack Capsule\", dose: \"1 Capsule (400mg)\", notes: \"Fasted OK, Contains Adrafinil, Phenylpiracetam, Citicoline, Noopept\" },\n            { name: \"Copper\", dose: \"1-2 mg\", notes: \"Fasted OK, Essential for zinc balance, energy production, and brain function\" },\n            { name: \"Natto-Serra (Nattokinase + Serrapeptase)\", dose: \"1-2 Capsules\", notes: \"Fasted OK, Supports circulation, fibrin breakdown, and inflammation control\" }\n        ]\n    },\n    {\n        time: \"First Meal (~11 AM - 1 PM, Breaking Fast)\",\n        supplements: [\n            { name: \"Food-Based Tyrosine (Eggs + Fresh Fish OR Beef)\", dose: \"-\", notes: \"With Food, Supports dopamine naturally\" },\n            { name: \"Probiotic (Sauerkraut or Supplement)\", dose: \"-\", notes: \"With Food, Gut health, digestion\" },\n            { name: \"Zinc\", dose: \"15-30 mg\", notes: \"With Food, Dopamine & immune support\" },\n            { name: \"Boron\", dose: \"6-10 mg\", notes: \"With Food, Enhances absorption, supports testosterone\" },\n            { name: \"Copper\", dose: \"1-2 mg\", notes: \"With Food, Take with zinc to maintain mineral balance\" }\n        ]\n    },\n    {\n        time: \"Afternoon (~3-4 PM, Prevent Dopamine Crash)\",\n        supplements: [\n            { name: \"Methylene Blue\", dose: \"0.5-1 mg/kg\", notes: \"Fasted OK, Mitochondrial support, cognitive clarity\" },\n            { name: \"Creatine Monohydrate (Lifting Days Only)\", dose: \"5g\", notes: \"With Food, Supports ATP & cognitive function\" },\n            { name: \"Nootropic Stack Capsule (Second Dose, If Needed)\", dose: \"1 Capsule (400mg)\", notes: \"Fasted OK, Must be taken 8 hours apart from first dose\" }\n        ]\n    },\n    {\n        time: \"Evening (~7-8 PM, Recovery & Sleep Optimization)\",\n        supplements: [\n            { name: \"Beef Liver OR Lightly Cooked Fish (Tuna, Mahi, Snapper)\", dose: \"-\", notes: \"With Food, High in B vitamins + Zinc for dopamine recovery\" },\n            { name: \"Avocado\", dose: \"-\", notes: \"With Food, Healthy fats for brain function\" },\n            { name: \"Glycine\", dose: \"1000 mg\", notes: \"With Food, Optional for Sleep, Calming neurotransmitter\" },\n            { name: \"Taurine\", dose: \"500 mg\", notes: \"With Food, GABA support, reduces stress\" },\n            { name: \"Magnesium\", dose: \"200 mg\", notes: \"With Food, Enhances sleep & muscle relaxation\" }\n        ]\n    },\n    {\n        time: \"Nighttime (~9-10 PM, Sleep Optimization)\",\n        supplements: [\n            { name: \"Chamomile OR Lemon Balm Tea\", dose: \"-\", notes: \"Fasted OK, Prepares body for sleep\" },\n            { name: \"Inositol\", dose: \"500-1000 mg\", notes: \"Fasted OK, Reduces overactive thoughts & anxiety\" },\n            { name: \"Glycine + Taurine + Magnesium (if not taken earlier)\", dose: \"-\", notes: \"Fasted OK, Supports deep sleep\" }\n        ]\n    }\n];\n\nconst SupplementPlanner = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [supplementData, setSupplementData] = useState(() => {\n    const saved = localStorage.getItem('supplementData');\n    return saved ? JSON.parse(saved) : {};\n  });\n\n  useEffect(() => {\n    localStorage.setItem('supplementData', JSON.stringify(supplementData));\n  }, [supplementData]);\n\n  const getDateKey = (date) => date.toISOString().split('T')[0];\n\n  const toggleSupplementCompletion = (timeIndex, supplementIndex) => {\n    const dateKey = getDateKey(currentDate);\n    const supplementKey = `${dateKey}-${timeIndex}-${supplementIndex}`;\n    \n    setSupplementData(prev => ({\n      ...prev,\n      [supplementKey]: !prev[supplementKey]\n    }));\n  };\n\n  const isSupplementCompleted = (timeIndex, supplementIndex) => {\n    const dateKey = getDateKey(currentDate);\n    const supplementKey = `${dateKey}-${timeIndex}-${supplementIndex}`;\n    return supplementData[supplementKey] || false;\n  };\n\n  const calculateCompletion = () => {\n    const dateKey = getDateKey(currentDate);\n    let completed = 0;\n    let total = 0;\n\n    supplementPlan.forEach((timeSlot, timeIndex) => {\n      timeSlot.supplements.forEach((_, supplementIndex) => {\n        const supplementKey = `${dateKey}-${timeIndex}-${supplementIndex}`;\n        if (supplementData[supplementKey]) completed++;\n        total++;\n      });\n    });\n\n    return {\n      completed,\n      total,\n      percentage: Math.round((completed / total) * 100)\n    };\n  };\n\n  return (\n    <div className=\"supplement-planner\">\n      <header className=\"header\">\n        <h1>Supplement Tracker</h1>\n        \n        <div className=\"date-navigation\">\n          <button onClick={() => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() - 1);\n            return newDate;\n          })}>\n            Prev\n          </button>\n          \n          <h2>{currentDate.toLocaleDateString('en-US', { \n            weekday: 'short',\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n          })}</h2>\n          \n          <button onClick={() => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() + 1);\n            return newDate;\n          })}>\n            Next\n          </button>\n        </div>\n      </header>\n\n      <div className=\"dashboard\">\n        <div className=\"stats-container\">\n          <div className=\"stats-section\">\n            <h3>Today's Progress</h3>\n            <div className=\"progress-container\">\n              <div className=\"progress-label\">\n                <span>Supplements Taken</span>\n                <span>{calculateCompletion().completed}/{calculateCompletion().total} ({calculateCompletion().percentage}%)</span>\n              </div>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\"\n                  style={{ \n                    width: `${calculateCompletion().percentage}%`,\n                    backgroundColor: calculateCompletion().percentage > 66 ? '#22c55e' : \n                                   calculateCompletion().percentage > 33 ? '#f59e0b' : '#ef4444'\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"supplement-list\">\n        {supplementPlan.map((timeSlot, timeIndex) => (\n          <div key={timeIndex} className=\"supplement-time-slot\">\n            <h3 className=\"time-slot-header\">{timeSlot.time}</h3>\n            <div className=\"supplements\">\n              {timeSlot.supplements.map((supplement, supplementIndex) => (\n                <div \n                  key={supplementIndex} \n                  className={`supplement-item ${isSupplementCompleted(timeIndex, supplementIndex) ? 'completed' : ''}`}\n                >\n                  <div className=\"supplement-info\">\n                    <div className=\"supplement-header\">\n                      <span className=\"supplement-name\">{supplement.name}</span>\n                      <input\n                        type=\"checkbox\"\n                        className=\"supplement-checkbox\"\n                        checked={isSupplementCompleted(timeIndex, supplementIndex)}\n                        onChange={() => toggleSupplementCompletion(timeIndex, supplementIndex)}\n                      />\n                    </div>\n                    <div className=\"supplement-details\">\n                      <span className=\"supplement-dose\">Dose: {supplement.dose}</span>\n                      <span className=\"supplement-notes\">{supplement.notes}</span>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SupplementPlanner; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAG,CACnB;EACIC,IAAI,EAAE,kBAAkB;EACxBC,WAAW,EAAE,CACT;IAAEC,IAAI,EAAE,oCAAoC;IAAEC,IAAI,EAAE,oBAAoB;IAAEC,KAAK,EAAE;EAAkD,CAAC,EACpI;IAAEF,IAAI,EAAE,YAAY;IAAEC,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAgD,CAAC,EACnG;IAAEF,IAAI,EAAE,gBAAgB;IAAEC,IAAI,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAuC,CAAC,EAC7F;IAAEF,IAAI,EAAE,wBAAwB;IAAEC,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAA+C,CAAC,EACzG;IAAEF,IAAI,EAAE,iCAAiC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAA0D,CAAC,EAC7H;IAAEF,IAAI,EAAE,kBAAkB;IAAEC,IAAI,EAAE,4BAA4B;IAAEC,KAAK,EAAE;EAAuC,CAAC,EAC/G;IAAEF,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAsE,CAAC,EAChH;IAAEF,IAAI,EAAE,yBAAyB;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,KAAK,EAAE;EAAsE,CAAC,EAC5I;IAAEF,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAA+E,CAAC,EACzH;IAAEF,IAAI,EAAE,0CAA0C;IAAEC,IAAI,EAAE,cAAc;IAAEC,KAAK,EAAE;EAA8E,CAAC;AAExK,CAAC,EACD;EACIJ,IAAI,EAAE,2CAA2C;EACjDC,WAAW,EAAE,CACT;IAAEC,IAAI,EAAE,iDAAiD;IAAEC,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAyC,CAAC,EACvH;IAAEF,IAAI,EAAE,sCAAsC;IAAEC,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAmC,CAAC,EACtG;IAAEF,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAuC,CAAC,EACjF;IAAEF,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAwD,CAAC,EAClG;IAAEF,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAwD,CAAC;AAE1G,CAAC,EACD;EACIJ,IAAI,EAAE,6CAA6C;EACnDC,WAAW,EAAE,CACT;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAsD,CAAC,EAC7G;IAAEF,IAAI,EAAE,0CAA0C;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAA+C,CAAC,EACvH;IAAEF,IAAI,EAAE,kDAAkD;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,KAAK,EAAE;EAAyD,CAAC;AAEhK,CAAC,EACD;EACIJ,IAAI,EAAE,kDAAkD;EACxDC,WAAW,EAAE,CACT;IAAEC,IAAI,EAAE,yDAAyD;IAAEC,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAA6D,CAAC,EACnJ;IAAEF,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAA6C,CAAC,EACnF;IAAEF,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE;EAA0D,CAAC,EACtG;IAAEF,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAA0C,CAAC,EACrF;IAAEF,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAgD,CAAC;AAErG,CAAC,EACD;EACIJ,IAAI,EAAE,0CAA0C;EAChDC,WAAW,EAAE,CACT;IAAEC,IAAI,EAAE,6BAA6B;IAAEC,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAqC,CAAC,EAC/F;IAAEF,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAmD,CAAC,EACpG;IAAEF,IAAI,EAAE,sDAAsD;IAAEC,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAiC,CAAC;AAE5H,CAAC,CACJ;AAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAIc,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,MAAM;IACzD,MAAMiB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACpD,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC;EACvC,CAAC,CAAC;EAEFhB,SAAS,CAAC,MAAM;IACdiB,YAAY,CAACI,OAAO,CAAC,gBAAgB,EAAEF,IAAI,CAACG,SAAS,CAACR,cAAc,CAAC,CAAC;EACxE,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,MAAMS,UAAU,GAAIC,IAAI,IAAKA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAE7D,MAAMC,0BAA0B,GAAGA,CAACC,SAAS,EAAEC,eAAe,KAAK;IACjE,MAAMC,OAAO,GAAGP,UAAU,CAACZ,WAAW,CAAC;IACvC,MAAMoB,aAAa,GAAG,GAAGD,OAAO,IAAIF,SAAS,IAAIC,eAAe,EAAE;IAElEd,iBAAiB,CAACiB,IAAI,KAAK;MACzB,GAAGA,IAAI;MACP,CAACD,aAAa,GAAG,CAACC,IAAI,CAACD,aAAa;IACtC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,qBAAqB,GAAGA,CAACL,SAAS,EAAEC,eAAe,KAAK;IAC5D,MAAMC,OAAO,GAAGP,UAAU,CAACZ,WAAW,CAAC;IACvC,MAAMoB,aAAa,GAAG,GAAGD,OAAO,IAAIF,SAAS,IAAIC,eAAe,EAAE;IAClE,OAAOf,cAAc,CAACiB,aAAa,CAAC,IAAI,KAAK;EAC/C,CAAC;EAED,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMJ,OAAO,GAAGP,UAAU,CAACZ,WAAW,CAAC;IACvC,IAAIwB,SAAS,GAAG,CAAC;IACjB,IAAIC,KAAK,GAAG,CAAC;IAEbjC,cAAc,CAACkC,OAAO,CAAC,CAACC,QAAQ,EAAEV,SAAS,KAAK;MAC9CU,QAAQ,CAACjC,WAAW,CAACgC,OAAO,CAAC,CAACE,CAAC,EAAEV,eAAe,KAAK;QACnD,MAAME,aAAa,GAAG,GAAGD,OAAO,IAAIF,SAAS,IAAIC,eAAe,EAAE;QAClE,IAAIf,cAAc,CAACiB,aAAa,CAAC,EAAEI,SAAS,EAAE;QAC9CC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO;MACLD,SAAS;MACTC,KAAK;MACLI,UAAU,EAAEC,IAAI,CAACC,KAAK,CAAEP,SAAS,GAAGC,KAAK,GAAI,GAAG;IAClD,CAAC;EACH,CAAC;EAED,oBACElC,OAAA;IAAKyC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjC1C,OAAA;MAAQyC,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACxB1C,OAAA;QAAA0C,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE3B9C,OAAA;QAAKyC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B1C,OAAA;UAAQ+C,OAAO,EAAEA,CAAA,KAAMrC,cAAc,CAACoB,IAAI,IAAI;YAC5C,MAAMkB,OAAO,GAAG,IAAIrC,IAAI,CAACmB,IAAI,CAAC;YAC9BkB,OAAO,CAACC,OAAO,CAACnB,IAAI,CAACoB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;YACnC,OAAOF,OAAO;UAChB,CAAC,CAAE;UAAAN,QAAA,EAAC;QAEJ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET9C,OAAA;UAAA0C,QAAA,EAAKjC,WAAW,CAAC0C,kBAAkB,CAAC,OAAO,EAAE;YAC3CC,OAAO,EAAE,OAAO;YAChBC,KAAK,EAAE,OAAO;YACdC,GAAG,EAAE,SAAS;YACdC,IAAI,EAAE;UACR,CAAC;QAAC;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAER9C,OAAA;UAAQ+C,OAAO,EAAEA,CAAA,KAAMrC,cAAc,CAACoB,IAAI,IAAI;YAC5C,MAAMkB,OAAO,GAAG,IAAIrC,IAAI,CAACmB,IAAI,CAAC;YAC9BkB,OAAO,CAACC,OAAO,CAACnB,IAAI,CAACoB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;YACnC,OAAOF,OAAO;UAChB,CAAC,CAAE;UAAAN,QAAA,EAAC;QAEJ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAET9C,OAAA;MAAKyC,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxB1C,OAAA;QAAKyC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9B1C,OAAA;UAAKyC,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B1C,OAAA;YAAA0C,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzB9C,OAAA;YAAKyC,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjC1C,OAAA;cAAKyC,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7B1C,OAAA;gBAAA0C,QAAA,EAAM;cAAiB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC9B9C,OAAA;gBAAA0C,QAAA,GAAOV,mBAAmB,CAAC,CAAC,CAACC,SAAS,EAAC,GAAC,EAACD,mBAAmB,CAAC,CAAC,CAACE,KAAK,EAAC,IAAE,EAACF,mBAAmB,CAAC,CAAC,CAACM,UAAU,EAAC,IAAE;cAAA;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/G,CAAC,eACN9C,OAAA;cAAKyC,SAAS,EAAC,cAAc;cAAAC,QAAA,eAC3B1C,OAAA;gBACEyC,SAAS,EAAC,eAAe;gBACzBe,KAAK,EAAE;kBACLC,KAAK,EAAE,GAAGzB,mBAAmB,CAAC,CAAC,CAACM,UAAU,GAAG;kBAC7CoB,eAAe,EAAE1B,mBAAmB,CAAC,CAAC,CAACM,UAAU,GAAG,EAAE,GAAG,SAAS,GACnDN,mBAAmB,CAAC,CAAC,CAACM,UAAU,GAAG,EAAE,GAAG,SAAS,GAAG;gBACrE;cAAE;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN9C,OAAA;MAAKyC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BzC,cAAc,CAAC0D,GAAG,CAAC,CAACvB,QAAQ,EAAEV,SAAS,kBACtC1B,OAAA;QAAqByC,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnD1C,OAAA;UAAIyC,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAEN,QAAQ,CAAClC;QAAI;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrD9C,OAAA;UAAKyC,SAAS,EAAC,aAAa;UAAAC,QAAA,EACzBN,QAAQ,CAACjC,WAAW,CAACwD,GAAG,CAAC,CAACC,UAAU,EAAEjC,eAAe,kBACpD3B,OAAA;YAEEyC,SAAS,EAAE,mBAAmBV,qBAAqB,CAACL,SAAS,EAAEC,eAAe,CAAC,GAAG,WAAW,GAAG,EAAE,EAAG;YAAAe,QAAA,eAErG1C,OAAA;cAAKyC,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B1C,OAAA;gBAAKyC,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,gBAChC1C,OAAA;kBAAMyC,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,EAAEkB,UAAU,CAACxD;gBAAI;kBAAAuC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC1D9C,OAAA;kBACE6D,IAAI,EAAC,UAAU;kBACfpB,SAAS,EAAC,qBAAqB;kBAC/BqB,OAAO,EAAE/B,qBAAqB,CAACL,SAAS,EAAEC,eAAe,CAAE;kBAC3DoC,QAAQ,EAAEA,CAAA,KAAMtC,0BAA0B,CAACC,SAAS,EAAEC,eAAe;gBAAE;kBAAAgB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACN9C,OAAA;gBAAKyC,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,gBACjC1C,OAAA;kBAAMyC,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,GAAC,QAAM,EAACkB,UAAU,CAACvD,IAAI;gBAAA;kBAAAsC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAChE9C,OAAA;kBAAMyC,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,EAAEkB,UAAU,CAACtD;gBAAK;kBAAAqC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC,GAjBDnB,eAAe;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAkBjB,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GAzBEpB,SAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA0Bd,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtC,EAAA,CAzIID,iBAAiB;AAAAyD,EAAA,GAAjBzD,iBAAiB;AA2IvB,eAAeA,iBAAiB;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}